
Sports Betting Simulator


Overview
This is a comprehensive full-stack javascript  sports betting simulator that combines real-time sports data, AI-powered predictions, and sophisticated betting mechanics. The application provides users with a realistic betting experience including bankroll management, AI recommendations, game simulation, and detailed analytics - all without real money transactions.

Key Features
signup/signin feauture :( for now, we are gonna use demo user: username: angel, password:angel1004. so there is no need to connect database).
AI-Powered Predictions: Uses OpenAI GPT-4o to generate intelligent betting recommendations 
Real Sports Data: Integrates with ESPN Sports API for live NBA, NFL, MLB, and NHL games:( for now we are gonna use demo data that exist in this project).
Virtual Bankroll: Users start with $10,000 virtual currency for betting simulation
Comprehensive Analytics: Tracks win rates, ROI, profit/loss, and betting patterns
Theme Support: Full dark/light mode with automatic system preference detection
Responsive Design: Mobile-optimized interface for betting on any device
System Architecture

Frontend: Next.js, Tailwind CSS
Backend: Backend(Javascript especially commonjs)

Data Models
Users: Virtual bankroll management and authentication
Games: Sports games with betting lines (spreads, moneylines, totals)
Predictions: AI-generated betting recommendations with confidence scoring
Bets: User betting history with status tracking and payout calculations
Business Logic Services
Prediction Engine: Generates AI predictions based on game data and mock ML algorithms
Betting Simulator: Handles bet placement, game simulation, and payout calculations
Analytics Engine: Calculates user statistics, win rates, and performance metrics
Frontend Features
Dark/light mode.
UI should be perfectly (Glamorus, wonderful)  to be familar with sportbetting site(  perect image , color , icons and etc)
Dashboard: Overview of bankroll, recent bets, and performance metrics
AI Predictions: Real-time betting recommendations with edge scores
Quick Bet: Streamlined bet placement interface
Analytics: Charts and insights for betting performance
Responsive Design: Mobile-optimized interface with dark theme
Application Workflow
1. Data Initialization
Game Data Fetching: ESPN Sports API provides live game schedules, teams, and basic info
(but for now we are gonna use demo data that exist in this project.)
Betting Lines Generation: Realistic spreads, moneylines, and totals calculated based on team matchups
AI Prediction Generation: OpenAI analyzes each game to create betting recommendations with confidence scores
2. User Experience Flow
Dashboard → View AI Predictions → Place Bets → Track Results → Analyze Performance
3. Betting Process
Prediction Display: AI shows recommended picks with edge scores (1-10) and confidence tiers
Bet Placement: Users can bet on spreads, moneylines, or totals through quick bet interface
Bankroll Management: Virtual currency tracked with each bet, preventing over-betting
Game Simulation: Realistic game results generated to determine bet outcomes
Result Processing: Wins/losses calculated and bankroll updated accordingly
4. Analytics Engine
Real-time Statistics: Win rate, ROI, total profit/loss, betting streaks
Performance Tracking: Historical bankroll changes, bet frequency analysis
Insights Generation: AI-powered betting pattern analysis and recommendations
5. Theme System Workflow
Manual Toggle: Sun/moon icon in header for manual theme switching
Persistence: Theme choice saved to localStorage for future visits
Dynamic Updates: All components respond instantly to theme changes

